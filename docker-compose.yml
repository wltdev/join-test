version: "3"

services:
  php:
    container_name: join-php
    build:
      context: ./docker-compose/php
      dockerfile: Dockerfile
    tty: true
    volumes:
      - ./app-backend:/var/www
      - ./docker-compose/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app

  nginx:
    container_name: join-nginx
    build:
      context: ./docker-compose/nginx
      dockerfile: Dockerfile
    tty: true
    ports:
      - "8083:80"
    volumes:
      - ./app-backend:/var/www
      - ./docker-compose/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app

  mysql:
    container_name: join-mysql
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    tty: true
    volumes:
      - setup-data:/var/lib/mysql/
      - ./docker-compose/mysql/my.cnf:/etc/mysql/my.cnf
      - ./docker-compose/mysql/init.sql:/etc/mysql/init.sql
    networks:
      - app
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: user
      MYSQL_PASSWORD: password

  redis:
    container_name: join-redis
    build:
      context: ./docker-compose/redis
      dockerfile: Dockerfile
    ports:
      - "6380:6379"

  frontend:
    container_name: join-frontend
    build:
      context: ./app-frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    stdin_open: true
    volumes:
      - "./app-frontend:/usr/app:delegated"
      - /usr/app/node_modules/
    networks:
      - app

networks:
  app:
    driver: bridge

volumes:
  setup-data:
    driver: local
